View组件是用户可以看见的部分，但是view的组件需要放到容器组件中，或者使用activity将其显示，
如果需要某个activity把定制的view显示出来，调用activity的setContentView()即可。


Activity中onCreate方法初始化了View

gravity：控制空间元素在父元素中的对齐方式。比如top|right


wrap_content：表示和自身内容一样的长度或者宽度

match——parent：表示和父组件一样的长度或者宽度
margin用于隔开元素与元素的间距，相对于父布局以及周围控件和布局的上下左右的距离。padding用于隔开元素与内容的间隔。

几大布局：
1，FrameLayout:定制在你屏幕上的一块空白备用区域，之后可以在其中填充对象，子元素会固定在你区域的左上角，后面的子元素会直接在在掐你一个元素上进行覆盖，将其部分或者全部挡住。

2，LinearLayout：以你为它设置的垂直或水平的属性值，来排列所有的子元素，所有的元素都会排在其他元素之后，

3，绝对布局：让子元素按照xy准确的显示在屏幕上

4，，，，，，


findViewById(ID)，根据IDzhaodao 


--------------------------------

style.xml与Themes.xml的区别
1：由上述代码可以看出，style主要用于view，而theme则主要用于application与activity
2：在R.attr定义中以window开头的一些属性只对theme有效，
3：如果一个应用使用了theme，同时应用下的view也使用了style的话，样式发生冲突时，style优先级高

